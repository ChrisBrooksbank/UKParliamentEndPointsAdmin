@page "/weather"
@using Newtonsoft.Json
@inject IHttpClientFactory HttpClientFactory
@attribute [StreamRendering]

<PageTitle>UK Parliamentary EndPoints</PageTitle>

<h1>Endpoints</h1>

<p>This component demonstrates showing data.</p>

@if (_endpoints == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Uri</th>
                <th>Description</th>
                <th>Ping Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var endpoint in _endpoints)
            {
                <tr>
                    <td>@endpoint.id</td>
                    <td><a href="@endpoint.uri" target="_blank">Fetch Data</a></td>
                    <td>@endpoint.description</td>
                    <td>@endpoint.pingStatus</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Endpoint[]? _endpoints;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = HttpClientFactory.CreateClient();
        var endpointsUrl = "https://ukparliamentendpoints-services.azurewebsites.net/ParliamentEndpoint/endpoints";
        string endpointsJson = await httpClient.GetStringAsync(endpointsUrl);
        _endpoints = JsonConvert.DeserializeObject<List<Endpoint>>(endpointsJson).ToArray();
    }

    private class Endpoint
    {
        public string? id { get; set; }
        public string? uri { get; set; }
        public string? description { get; set; }
        public string? pingStatus { get; set; }
    }
}
